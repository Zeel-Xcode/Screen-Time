Index: app/src/main/java/com/screentime/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.screentime;\n\nimport android.annotation.SuppressLint;\nimport android.app.AppOpsManager;\nimport android.app.DatePickerDialog;\nimport android.app.Dialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.content.pm.ActivityInfo;\nimport android.content.pm.ApplicationInfo;\nimport android.content.pm.PackageManager;\nimport android.content.pm.ResolveInfo;\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.provider.Settings;\nimport android.view.View;\nimport android.widget.DatePicker;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\nimport androidx.annotation.RequiresApi;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.appcompat.widget.Toolbar;\nimport androidx.core.app.NotificationManagerCompat;\n\nimport com.facebook.appevents.AppEventsLogger;\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\nimport com.screentime.utils.AppConstant;\nimport com.screentime.utils.CommonUtils;\n\nimport java.text.DecimalFormat;\nimport java.text.NumberFormat;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.Calendar;\nimport java.util.Date;\nimport java.util.List;\n\nimport Model.NewModel;\nimport SQLiteDatabase.DatabaseHandler2;\nimport services.GetUsageService1;\n\nimport static Fragments.AllDataFragment.spinner;\n\npublic class HomeActivity extends AppCompatActivity {\n\n    FloatingActionButton fab;\n    String date;\n    Toolbar toolbar;\n    ImageView iv_back, ic_export;\n    TextView tvTitle, tvFacebook, tvInsta, tvSnapChat, tvfbTime, tvinstaTime, tvsnapchatTime, datepicker, tvMessages, tvmessageTime, tvTiktok, tvtiktokTime, tvPhone, tvphoneTime, tvtwitterTime, tvyoutubeTime;\n    LinearLayout llFacebook, llSnapchat, llInsta, llMessages, llTktok, llPhone,llyoutube,lltwitter;\n\n    NumberFormat formatter;\n    private AppEventsLogger logger;\n    private DatabaseHandler2 databaseHandler2;\n    private String id;\n    String datepickerstamp;\n\n    public static final String NOTIFICATION_CHANNEL_NAME = \"App usages Tracking\";\n    public static final String NOTIFICATION_CHANNEL_ID = \"Screentimer_background_service_channel\";\n    public static final int ONGOING_NOTIFICATION_ID = 100;\n\n    private int mYear, mMonth, mDay;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_home);\n\n        fab = findViewById(R.id.fab);\n        tvphoneTime = findViewById(R.id.tvphoneTime);\n        tvPhone = findViewById(R.id.tvPhone);\n        tvtiktokTime = findViewById(R.id.tvtiktokTime);\n        tvTiktok = findViewById(R.id.tvTiktok);\n        tvmessageTime = findViewById(R.id.tvmessageTime);\n        tvMessages = findViewById(R.id.tvMessages);\n        datepicker = findViewById(R.id.datepicker);\n        toolbar = findViewById(R.id.toolbar);\n        iv_back = findViewById(R.id.iv_back);\n        ic_export = findViewById(R.id.ic_export);\n        tvTitle = findViewById(R.id.tvTitle);\n        tvFacebook = findViewById(R.id.tvFacebook);\n        tvInsta = findViewById(R.id.tvInsta);\n        tvSnapChat = findViewById(R.id.tvSnapChat);\n        tvfbTime = findViewById(R.id.tvfbTime);\n        tvinstaTime = findViewById(R.id.tvinstaTime);\n        tvsnapchatTime = findViewById(R.id.tvsnapchatTime);\n        tvtwitterTime = findViewById(R.id.tvtwitterTime);\n        tvyoutubeTime = findViewById(R.id.tvyoutubeTime);\n        llFacebook = findViewById(R.id.llFacebook);\n        llSnapchat = findViewById(R.id.llSnapchat);\n        llInsta = findViewById(R.id.llInsta);\n        llMessages = findViewById(R.id.llMessages);\n        llTktok = findViewById(R.id.llTktok);\n        llPhone = findViewById(R.id.llPhone);\n        llyoutube = findViewById(R.id.llyoutube);\n        lltwitter = findViewById(R.id.lltwitter);\n\n        formatter = new DecimalFormat(\"00\");\n        setToolbar();\n\n        databaseHandler2 = new DatabaseHandler2(this);\n        logger = AppEventsLogger.newLogger(this);\n\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Dialog dialog = new Dialog(HomeActivity.this);\n                dialog.setContentView(R.layout.custom_export_dialog);\n                dialog.getWindow().setBackgroundDrawableResource(android.R.color.transparent);\n\n                TextView export = dialog.findViewById(R.id.export);\n                export.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n                        dialog.dismiss();\n                        databaseHandler2.exportallappdata(date);\n\n                    }\n                });\n\n                TextView cancel = dialog.findViewById(R.id.cancel);\n                cancel.setOnClickListener(new View.OnClickListener() {\n                    @Override\n                    public void onClick(View view) {\n                        dialog.dismiss();\n                    }\n                });\n\n                dialog.show();\n            }\n        });\n\n        llFacebook.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                facebook();\n            }\n        });\n\n        llyoutube.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                youtube();\n            }\n        });\n\n        lltwitter.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                twitter();\n            }\n        });\n\n        llInsta.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                instagram();\n            }\n        });\n\n        llSnapchat.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                snapchat();\n            }\n        });\n\n        llMessages.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                messages();\n            }\n        });\n\n        llTktok.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                tiktok();\n            }\n        });\n\n        llPhone.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                phone();\n            }\n        });\n\n        final Calendar c = Calendar.getInstance();\n        mYear = c.get(Calendar.YEAR);\n        mMonth = c.get(Calendar.MONTH);\n        mDay = c.get(Calendar.DAY_OF_MONTH);\n\n        datepickerstamp =  String.format(\"%d-%02d-%02d\", mYear, (mMonth + 1), mDay);\n        datepicker.setText(datepickerstamp);\n\n        datepicker.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n\n                DatePickerDialog datePickerDialog = new DatePickerDialog(HomeActivity.this, R.style.DialogTheme,\n                        new DatePickerDialog.OnDateSetListener() {\n\n                            @Override\n                            public void onDateSet(DatePicker view, int year,\n                                                  int monthOfYear, int dayOfMonth) {\n                                mYear = year;\n                                mMonth = monthOfYear;\n                                mDay = dayOfMonth;\n\n                                datepickerstamp =  String.format(\"%d-%02d-%02d\", year, (monthOfYear + 1), dayOfMonth);\n                                datepicker.setText(datepickerstamp);\n\n                                setData(datepickerstamp);\n\n                            }\n                        }, mYear, mMonth, mDay);\n                datePickerDialog.show();\n            }\n        });\n\n    }\n\n\n\n    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n    @Override\n    protected void onResume() {\n        super.onResume();\n        iv_back.setVisibility(View.INVISIBLE);\n        iv_back.setEnabled(false);\n\n        if (checkPermission()) {\n            setData(getCurrentDate());\n            startService(new Intent(this, GetUsageService1.class));\n        } else {\n            Intent intent = new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS);\n            startActivity(intent);\n        }\n    }\n\n    private void setToolbar() {\n        setSupportActionBar(toolbar);\n        tvTitle.setText(\"Home screen\");\n//        ic_export.setVisibility(View.INVISIBLE);\n\n    }\n\n    /**\n     * Navigate to Statistics Screen with Facebook's details.\n     */\n    private void facebook() {\n\n            startActivity(new Intent(this, ResultActivity.class)\n                    .putExtra(\"which\", \"facebook\"));\n\n    }\n\n    private void twitter() {\n\n            startActivity(new Intent(this, ResultActivity.class)\n                    .putExtra(\"which\", \"twitter\"));\n\n    }\n\n    private void youtube() {\n\n        startActivity(new Intent(this, ResultActivity.class)\n                .putExtra(\"which\", \"youtube\"));\n\n    }\n\n    private void snapchat() {\n\n        startActivity(new Intent(this, ResultActivity.class)\n                .putExtra(\"which\", \"snapchat\"));\n\n    }\n\n    private void instagram() {\n\n            startActivity(new Intent(this, ResultActivity.class)\n                    .putExtra(\"which\", \"instagram\"));\n\n    }\n\n    private void messages(){\n        startActivity(new Intent(this, ResultActivity.class)\n             .putExtra(\"which\",\"message\"));\n    }\n\n    private void tiktok(){\n        startActivity(new Intent(this, ResultActivity.class)\n                .putExtra(\"which\",\"tiktok\"));\n    }\n\n    private void phone(){\n        startActivity(new Intent(this, ResultActivity.class)\n                .putExtra(\"which\",\"phone\"));\n    }\n\n    /**\n     * Checks Usage Stats permission.\n     */\n    @RequiresApi(api = Build.VERSION_CODES.KITKAT)\n    private boolean checkPermission() {\n        try {\n            PackageManager packageManager = getPackageManager();\n            ApplicationInfo applicationInfo = packageManager.getApplicationInfo(getPackageName(), 0);\n            AppOpsManager appOpsManager = (AppOpsManager) getSystemService(Context.APP_OPS_SERVICE);\n            int mode = appOpsManager.checkOpNoThrow(AppOpsManager.OPSTR_GET_USAGE_STATS, applicationInfo.uid, applicationInfo.packageName);\n            return (mode == AppOpsManager.MODE_ALLOWED);\n\n        } catch (PackageManager.NameNotFoundException e) {\n            return false;\n        }\n    }\n\n    /**\n     * To set data  on Screen.\n     * @param currentDate\n     */\n    @SuppressLint(\"SetTextI18n\")\n    private void setData(String currentDate) {\n\n        long totalfb = 0;\n        long totalinsta = 0;\n        long totalsnap = 0;\n        long totalmessage = 0;\n        long totaltiktok = 0;\n        long totalphone = 0;\n        long totaltwitter = 0;\n        long totalyoutube = 0;\n\n        ArrayList<NewModel> getdata = databaseHandler2.getAllTime();\n\n        if (getdata.size() > 0) {\n            for (int i = 0; i < getdata.size(); i++) {\n                if (getdata.get(i).getCurrentdate().equals(currentDate)) {\n                    if (getdata.get(i).getAppname().equals(\"facebook\")) {\n                        totalfb = totalfb + (int) getdata.get(i).getTotalsec();\n                    } else if (getdata.get(i).getAppname().equals(\"snapchat\")) {\n                        totalsnap = totalsnap + (int) getdata.get(i).getTotalsec();\n                    } else if (getdata.get(i).getAppname().equals(\"instagram\")) {\n                        totalinsta = totalinsta + (int) getdata.get(i).getTotalsec();\n                    } else if (getdata.get(i).getAppname().equals(\"message\")) {\n                        totalmessage = totalmessage + (int) getdata.get(i).getTotalsec();\n                    } else if (getdata.get(i).getAppname().equals(\"tiktok\")) {\n                        totaltiktok = totaltiktok + (int) getdata.get(i).getTotalsec();\n                    } else if (getdata.get(i).getAppname().equals(\"phone\")) {\n                        totalphone = totalphone + (int) getdata.get(i).getTotalsec();\n                    } else if (getdata.get(i).getAppname().equals(\"youtube\")) {\n                        totalyoutube = totalyoutube + (int) getdata.get(i).getTotalsec();\n                    } else if (getdata.get(i).getAppname().equals(\"twitter\")) {\n                        totaltwitter = totaltwitter + (int) getdata.get(i).getTotalsec();\n                    }\n                }\n            }\n        }\n\n        tvfbTime.setText(totalfb / 3600 + \":\" + formatter.format((totalfb % 3600) / 60) + \":\" + formatter.format(totalfb % 60));\n        tvinstaTime.setText(totalinsta / 3600 + \":\" + formatter.format((totalinsta % 3600) / 60) + \":\" + formatter.format(totalinsta % 60));\n        tvsnapchatTime.setText(totalsnap / 3600 + \":\" + formatter.format((totalsnap % 3600) / 60) + \":\" + formatter.format(totalsnap % 60));\n        tvmessageTime.setText(totalmessage / 3600 + \":\" + formatter.format(totalmessage % 3600 / 60) + \":\" + formatter.format(totalmessage % 60));\n        tvtiktokTime.setText(totaltiktok / 3600 + \":\" + formatter.format(totaltiktok % 3600 / 60) + \":\" + formatter.format(totaltiktok % 60));\n        tvphoneTime.setText(totalphone / 3600 + \":\" + formatter.format(totalphone % 3600 / 60) + \":\" + formatter.format(totalphone % 60));\n        tvtwitterTime.setText(totaltwitter / 3600 + \":\" + formatter.format(totaltwitter % 3600 / 60) + \":\" + formatter.format(totaltwitter % 60));\n        tvyoutubeTime.setText(totalyoutube / 3600 + \":\" + formatter.format(totalyoutube % 3600 / 60) + \":\" + formatter.format(totalyoutube % 60));\n\n    }\n\n    private String getCurrentDate() {\n        SimpleDateFormat sdf2 = new SimpleDateFormat(\"yyyy-MM-dd\");\n        String dateInString = sdf2.format(System.currentTimeMillis());\n        return dateInString;\n    }\n\n    @Override\n    protected void onDestroy() {\n        super.onDestroy();\n        NotificationManagerCompat.from(HomeActivity.this).cancel(ONGOING_NOTIFICATION_ID);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/screentime/HomeActivity.java b/app/src/main/java/com/screentime/HomeActivity.java
--- a/app/src/main/java/com/screentime/HomeActivity.java	(revision fcc5dfd3c6231de5bb25a036972fc4dadc866970)
+++ b/app/src/main/java/com/screentime/HomeActivity.java	(date 1629776051110)
@@ -362,14 +362,14 @@
             }
         }
 
-        tvfbTime.setText(totalfb / 3600 + ":" + formatter.format((totalfb % 3600) / 60) + ":" + formatter.format(totalfb % 60));
-        tvinstaTime.setText(totalinsta / 3600 + ":" + formatter.format((totalinsta % 3600) / 60) + ":" + formatter.format(totalinsta % 60));
-        tvsnapchatTime.setText(totalsnap / 3600 + ":" + formatter.format((totalsnap % 3600) / 60) + ":" + formatter.format(totalsnap % 60));
-        tvmessageTime.setText(totalmessage / 3600 + ":" + formatter.format(totalmessage % 3600 / 60) + ":" + formatter.format(totalmessage % 60));
-        tvtiktokTime.setText(totaltiktok / 3600 + ":" + formatter.format(totaltiktok % 3600 / 60) + ":" + formatter.format(totaltiktok % 60));
-        tvphoneTime.setText(totalphone / 3600 + ":" + formatter.format(totalphone % 3600 / 60) + ":" + formatter.format(totalphone % 60));
-        tvtwitterTime.setText(totaltwitter / 3600 + ":" + formatter.format(totaltwitter % 3600 / 60) + ":" + formatter.format(totaltwitter % 60));
-        tvyoutubeTime.setText(totalyoutube / 3600 + ":" + formatter.format(totalyoutube % 3600 / 60) + ":" + formatter.format(totalyoutube % 60));
+        tvfbTime.setText(formatter.format(totalfb / 3600) + ":" + formatter.format((totalfb % 3600) / 60) + ":" + formatter.format(totalfb % 60));
+        tvinstaTime.setText(formatter.format(totalinsta / 3600) + ":" + formatter.format((totalinsta % 3600) / 60) + ":" + formatter.format(totalinsta % 60));
+        tvsnapchatTime.setText(formatter.format(totalsnap / 3600) + ":" + formatter.format((totalsnap % 3600) / 60) + ":" + formatter.format(totalsnap % 60));
+        tvmessageTime.setText(formatter.format(totalmessage / 3600) + ":" + formatter.format(totalmessage % 3600 / 60) + ":" + formatter.format(totalmessage % 60));
+        tvtiktokTime.setText(formatter.format(totaltiktok / 3600) + ":" + formatter.format(totaltiktok % 3600 / 60) + ":" + formatter.format(totaltiktok % 60));
+        tvphoneTime.setText(formatter.format(totalphone / 3600) + ":" + formatter.format(totalphone % 3600 / 60) + ":" + formatter.format(totalphone % 60));
+        tvtwitterTime.setText(formatter.format(totaltwitter / 3600) + ":" + formatter.format(totaltwitter % 3600 / 60) + ":" + formatter.format(totaltwitter % 60));
+        tvyoutubeTime.setText(formatter.format(totalyoutube / 3600) + ":" + formatter.format(totalyoutube % 3600 / 60) + ":" + formatter.format(totalyoutube % 60));
 
     }
 
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <bytecodeTargetLevel target=\"1.8\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	(revision fcc5dfd3c6231de5bb25a036972fc4dadc866970)
+++ b/.idea/compiler.xml	(date 1629776095606)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\n  <component name=\"GradleSettings\">\n    <option name=\"linkedExternalProjectsSettings\">\n      <GradleProjectSettings>\n        <option name=\"testRunner\" value=\"PLATFORM\" />\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\n        <option name=\"modules\">\n          <set>\n            <option value=\"$PROJECT_DIR$\" />\n            <option value=\"$PROJECT_DIR$/app\" />\n          </set>\n        </option>\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\n      </GradleProjectSettings>\n    </option>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	(revision fcc5dfd3c6231de5bb25a036972fc4dadc866970)
+++ b/.idea/gradle.xml	(date 1629863411964)
@@ -4,7 +4,7 @@
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
-        <option name="testRunner" value="PLATFORM" />
+        <option name="testRunner" value="GRADLE" />
         <option name="distributionType" value="DEFAULT_WRAPPED" />
         <option name="externalProjectPath" value="$PROJECT_DIR$" />
         <option name="modules">
@@ -14,7 +14,6 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
-        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
